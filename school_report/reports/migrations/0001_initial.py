# Generated by Django 5.2 on 2025-05-22 20:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('core', '0001_initial'),
        ('schools', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(choices=[('assignment', 'Assignment'), ('quiz', 'Quiz'), ('midterm', 'Mid-Term Test'), ('endterm', 'End of Term Test'), ('project', 'Project'), ('other', 'Other')], max_length=20)),
                ('test_date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'user_type': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_tests', to='core.userprofile')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='schools.standard')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='academics.term')),
            ],
            options={
                'ordering': ['-test_date'],
            },
        ),
        migrations.CreateModel(
            name='TestSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_score', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('standard_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_subjects', to='academics.standardsubject')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='reports.test')),
            ],
            options={
                'unique_together': {('test', 'standard_subject')},
            },
        ),
        migrations.CreateModel(
            name='StudentTermReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_present', models.PositiveIntegerField()),
                ('days_late', models.PositiveIntegerField(default=0)),
                ('attitude', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('respect', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('parental_support', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('attendance', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('assignment_completion', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('class_participation', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('time_management', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('remarks', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_reviews', to='schools.student')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_reviews', to='academics.term')),
            ],
            options={
                'unique_together': {('term', 'student')},
            },
        ),
        migrations.CreateModel(
            name='TestScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_scores', to='schools.student')),
                ('test_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_scores', to='reports.testsubject')),
            ],
            options={
                'verbose_name': 'Test Score',
                'verbose_name_plural': 'Test Scores',
                'unique_together': {('test_subject', 'student')},
            },
        ),
    ]
