# Generated by Django 5.2 on 2025-04-27 19:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TermTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.PositiveSmallIntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('max_marks', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('standard_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_tests', to='academics.standardsubject')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_tests', to='academics.year')),
            ],
            options={
                'unique_together': {('year', 'term', 'standard_subject')},
            },
        ),
        migrations.CreateModel(
            name='QualitativeRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.PositiveSmallIntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('attitude', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('respect', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('parental_support', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('attendance', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('assignment_completion', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('class_participation', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('time_management', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualitative_ratings', to='schools.student')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_ratings', to='academics.year')),
            ],
            options={
                'unique_together': {('year', 'term', 'student')},
            },
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.PositiveSmallIntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('days_present', models.PositiveIntegerField()),
                ('days_late', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='schools.student')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_attendances', to='academics.year')),
            ],
            options={
                'unique_together': {('year', 'term', 'student')},
            },
        ),
        migrations.CreateModel(
            name='TeacherRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.PositiveSmallIntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('remarks', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_remarks', to='schools.student')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_remarks', to='academics.year')),
            ],
            options={
                'unique_together': {('year', 'term', 'student')},
            },
        ),
        migrations.CreateModel(
            name='StudentSubjectScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_scores', to='schools.student')),
                ('term_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_scores', to='reports.termtest')),
            ],
            options={
                'verbose_name': 'Student Subject Score',
                'verbose_name_plural': 'Student Subject Scores',
                'unique_together': {('term_test', 'student')},
            },
        ),
    ]
